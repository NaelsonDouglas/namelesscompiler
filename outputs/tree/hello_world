0001  int main(int argc, string argv)
          S=IDT_TYPE_OR_VOID id PARAM o_c_brckt ALL_ITER c_c_brckt S
	          IDT_TYPE_OR_VOID=TYPE
		          TYPE=CONST_R IDT_TYPE
			          CONST_R=epsilon
				          IDT_TYPE=idt_int
              [0001, 0001] (0033,   idt_int){int}
              [0001, 0002] (0007,        id){main}
          PARAM=o_brckt PRH
              [0001, 0003] (0027,   o_brckt){(}
          PRH=PR c_brckt
	          PR=TYPE ID_OR_VEC PRL
		          TYPE=CONST_R IDT_TYPE
			          CONST_R=epsilon
				          IDT_TYPE=idt_int
              [0001, 0004] (0033,   idt_int){int}
          ID_OR_VEC=id VEC_INDX
              [0001, 0005] (0007,        id){argc}
          VEC_INDX=epsilon
	          PRL=comma PR
              [0001, 0006] (0026,     comma){,}
          PR=TYPE ID_OR_VEC PRL
	          TYPE=CONST_R IDT_TYPE
		          CONST_R=epsilon
			          IDT_TYPE=idt_string
              [0001, 0007] (0036,idt_string){string}
          ID_OR_VEC=id VEC_INDX
              [0001, 0008] (0007,        id){argv}
          VEC_INDX=epsilon
	          PRL=epsilon
              [0001, 0009] (0028,   c_brckt){)}
0002  {
              [0002, 0001] (0031, o_c_brckt){{}
0003    print("Hello World")
          ALL_ITER=FCALL_OR_ATRIB ALL_ITER
	          FCALL_OR_ATRIB=ID_OR_VEC FCALL_OR_ATRIB_F
		          ID_OR_VEC=id VEC_INDX
              [0003, 0001] (0007,        id){print}
          VEC_INDX=epsilon
	          FCALL_OR_ATRIB_F=FN_CH
		          FN_CH=o_brckt FN_CHP
              [0003, 0002] (0027,   o_brckt){(}
          FN_CHP=FN_PR c_brckt
	          FN_PR=CN_TP FN_PRE
		          CN_TP=ct_string
              [0003, 0003] (0005, ct_string){"Hello World"}
          FN_PRE=epsilon
              [0003, 0004] (0028,   c_brckt){)}
0004  }
          ALL_ITER=epsilon
              [0004, 0001] (0032, c_c_brckt){}}
